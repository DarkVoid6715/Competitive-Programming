<snippet>
	<content>
<![CDATA[template<class T> struct li_chao_segment_tree{
	vector<pair<T, T>> arr;
	int n;
	void init(int _n){
		n = _n;
		arr.resize(n * 4 + 4, make_pair(0, DBL_MAX));
	}
	T solve(pair<T, T> a, int x){
		return a.first * x + a.second;
	}
	void add(int vtx, int l, int r, pair<T, T> val){
		int mid = l + (r - l) / 2;
		bool lc = solve(val, l) < solve(arr[vtx], l);
		bool midc = solve(val, mid) < solve(arr[vtx], mid);
		if(midc) swap(arr[vtx], val);
		if(l + 1 == r) return;
		else if(lc != midc) add(vtx * 2, l, mid, val);
		else add(vtx * 2 + 1, mid, r, val);
	}
	void add(pair<T, T> val){
		add(1, 0, n, val);
	}
	T query(int vtx, int l, int r, int x){
		int mid = l + (r - l) / 2;
		if(l + 1 == r) return solve(arr[vtx], x);
		else if(x < mid)
			return min(solve(arr[vtx], x), query(2 * vtx, l, mid, x));
		else
			return min(solve(arr[vtx], x), query(2 * vtx + 1, mid, r, x));
	}
	T query(int x){ return query(1, 0, n, x); }
};]]>	
	</content>
	<tabTrigger>cp_li_chao_segment_tree</tabTrigger>
	<description>Li-Chao Segment Tree</description>
</snippet>