{
    "Template": {
        "prefix": "cp_template",
        "body": [
            "#pragma GCC optimize(\"unroll-loops, O3\")\r",
            "#include <bits/stdc++.h>\r",
            "#include <ext/pb_ds/tree_policy.hpp>\r",
            "#include <ext/pb_ds/assoc_container.hpp>\r",
            "#define IO(i, o) freopen(i, \"r\", stdin), freopen(o, \"w\", stdout)\r",
            "using namespace std;\r",
            "using namespace __gnu_pbds;\r",
            "using ll = long long;\r",
            "using ld = long double;\r",
            "const int xx[8] = { -1, 0, 1, 0, -1, -1, 1, 1 };\r",
            "const int yy[8] = { 0, -1, 0, 1, -1, 1, -1, 1 };\r",
            "\r",
            "int main() {\r",
            "    //IO(\"input.txt\", \"output.txt\");\r",
            "    ios_base::sync_with_stdio(false);\r",
            "    cin.tie(NULL), srand(time(NULL));\r",
            "    \r",
            "    return 0;\r",
            "}"
        ],
        "description": ""
    },
	"Google Code Jam Template": {
        "prefix": "cp_google_code_jam_template",
        "body": [
            "#pragma GCC optimize(\"unroll-loops, O3\")\r",
            "#include <bits/stdc++.h>\r",
            "#include <ext/pb_ds/tree_policy.hpp>\r",
            "#include <ext/pb_ds/assoc_container.hpp>\r",
            "#define IO(i, o) freopen(i, \"r\", stdin), freopen(o, \"w\", stdout)\r",
            "using namespace std;\r",
            "using namespace __gnu_pbds;\r",
            "using ll = long long;\r",
            "using ld = long double;\r",
            "const int xx[8] = { -1, 0, 1, 0, -1, -1, 1, 1 };\r",
            "const int yy[8] = { 0, -1, 0, 1, -1, 1, -1, 1 };\r",
            "\r",
            "void solve() {\r",
            "\r",
            "}\r",
            "\r",
            "int main() {\r",
            "    //IO(\"input.txt\", \"output.txt\");\r",
            "    ios_base::sync_with_stdio(false);\r",
            "    cin.tie(NULL), srand(time(NULL));\r",
            "    int t;\r",
            "    cin >> t;\r",
            "    for (int i = 1; i <= t; i++) {\r",
            "        cout << \"Case #\" << i << \": \";\r",
            "        solve();\r",
            "    }\r",
            "    return 0;\r",
            "}"
        ],
        "description": ""
    }
}